?setwd
setwd(C:/Users/Ines_/OneDrive/Documentos/estágio/Pré-Estágio/Problemas/Problema4 - Abates)
library(shiny)
library(quantmod)
# Source helpers ----
source("helpers.R")
# Source helpers ----
source("./helpers.R")
getwd()
setwd(C:/Users/Ines_/OneDrive/Documentos/estagio/Pre-Estagio/shiny/stockVis)
setwd("C:/Users/Ines_/OneDrive/Documentos/estagio/Pre-Estagio/shiny/stockVis")
# Source helpers ----
source("helpers.R")
ui <- fluidPage(
titlePanel("stockVis"),
sidebarLayout(
sidebarPanel(
helpText("Select a stock to examine.
Information will be collected from Yahoo finance."),
textInput("symb", "Symbol", "SPY"),
dateRangeInput("dates",
"Date range",
start = "2013-01-01",
end = as.character(Sys.Date())),
br(),
br(),
checkboxInput("log", "Plot y axis on log scale",
value = FALSE),
checkboxInput("adjust",
"Adjust prices for inflation", value = FALSE)
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
data <- dataInput()
if(input$adjust) data <- adjust(dataInput())
output$plot <- renderPlot({
chartSeries(data, theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
# Run the app
shinyApp(ui, server)
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
data <- reactive({
dataInput()
if(input$adjust) data <- adjust(dataInput())
})
output$plot <- renderPlot({
chartSeries(data, theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
# Run the app
shinyApp(ui, server)
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
data <- reactive({
dataInput()
if(input$adjust) data <- adjust(dataInput())
})
output$plot <- renderPlot({
chartSeries(data, theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
# Run the app
shinyApp(ui, server)
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
data <- reactive({
dataInput()
if(input$adjust) data <- adjust(dataInput())
})
output$plot <- renderPlot({
chartSeries(data(), theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
runApp()
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
data <- reactive({
if(!input$adjust) return(dataInput())
adjust(dataInput())
})
output$plot <- renderPlot({
chartSeries(data(), theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
# Run the app
shinyApp(ui, server)
library(shiny)
library(maps)
library(mapproj)
source("./Problema 4 - Cris e Inês.R")
setwd("C:/Users/Ines_/OneDrive/Documentos/estagio/Pre-Estagio/AbatesOrganizacao")
library(shiny)
library(maps)
library(mapproj)
source("./Problema 4 - Cris e Inês.R")
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(verbatimTextOutput(outputId = "mapa"))
)
)
server <- function(input, output) {
output$mapa <- renderPrint({
switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
})
}
# Run app ----
shinyApp(ui, server)
Codme <- fread("./Cód_ME_DiCo.csv") %>% unique
source("./Problema 4 - Cris e Inês.R")
View(Codme)
getwd()
source("./Problema 4 - Cris e Inês.R")
Codme <- fread("./Cód_ME_DiCo.csv") %>% unique
Total_Caract_Expl <- fread("./FicheiroTotalCaracterizacaoExploracoes-2022-10-04.csv")
Freguesias <- fread("./Correspondências freg 2013-14.csv")
library(tidyverse)
library(data.table)
library(plotly)
library(janitor)
library(RColorBrewer)
library(leaflet)
library(sf)
library(lubridate)
library(measurements)
library(shiny)
library(maps)
library(mapproj)
source("./Problema 4 - Cris e Inês.R")
?source
Codme <- fread("./Cód_ME_DiCo.csv") %>% unique
source("./Problema 4 - Cris e Inês.R")
source("./Problema 4 - Cris e Inês.R")
source("./Problema 4 - Cris e Inês.R")
source("./Problema 4 - Cris e Inês.R")
source("./Problema 4 - Cris e Inês.R", encoding = "utf-8")
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(verbatimTextOutput(outputId = "mapa"))
)
)
server <- function(input, output) {
output$mapa <- renderPrint({
switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
})
}
# Run app ----
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(print(SantaCarnes_leaflet))
)
)
server <- function(input, output) {
output$mapa <- renderPrint({
switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
})
}
# Run app ----
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(verbatimTextOutput(outputId = "mapa"))
)
)
server <- function(input, output) {
output$mapa <- renderPrint({
datamap <- switch(input$var,
"Santa Carnes" = pSantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print(datamap)
})
}
# Run app ----
shinyApp(ui, server)
server <- function(input, output) {
output$mapa <- renderPrint({
datamap <- switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print(datamap)
})
}
# Run app ----
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(textOutput(outputId = "mapa"))
)
)
# Run app ----
shinyApp(ui, server)
server <- function(input, output) {
output$mapa <- renderPrint({
datamap <- switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print("merda")
})
}
# Run app ----
shinyApp(ui, server)
server <- function(input, output) {
output$mapa <- renderPrint({
datamap <- switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print(datamap)
})
}
class(datamap)
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(imageOutput(outputId = "mapa"))
)
)
server <- function(input, output) {
output$mapa <- renderImage({
datamap <- switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print(datamap)
})
}
# Run app ----
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Mapas Top3 Matadouros PT"),
sidebarLayout(
sidebarPanel(
helpText("Representação geográfica da área de captação dos principais
matadouros portugueses."),
selectInput("var",
label = "Escolha o matadouro pretendido:",
choices = c("Santa Carnes", "Raporal",
"Regional de Mafra"),
selected = "Santa Carnes")
),
mainPanel(leafletOutput(outputId = "mapa"))
)
)
server <- function(input, output) {
output$mapa <- renderLeaflet({
datamap <- switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
print(datamap)
})
}
# Run app ----
shinyApp(ui, server)
server <- function(input, output) {
output$mapa <- renderLeaflet({
switch(input$var,
"Santa Carnes" = SantaCarnes_leaflet,
"Raporal" = Raporal_leaflet,
"Regional de Mafra" = RegMafra_leaflet)
})
}
# Run app ----
shinyApp(ui, server)
# Run app ----
shinyApp(ui, server)
